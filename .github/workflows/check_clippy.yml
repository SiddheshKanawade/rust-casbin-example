name: Check Code

on:
  pull_request:
  push:
    branches:
      - 'main'


jobs:
  test:
    name: Run tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: Swatinem/rust-cache@v1

    - name: Cargo build
      uses: actions-rs/cargo@v1
      with:
        command: build

    - name: Verify tidy
      run: git diff --exit-code

    - name: Check clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --workspace --tests --all-features -- -D warnings

    - name: Check format
      if: steps.skip-ci.outputs.skip != 'true'
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Cargo test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace

# jobs:
#   test:
#     name: "Test"
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, windows-latest, macOS-latest]

#     steps:
#     - name: "Checkout Repository"
#       uses: actions/checkout@v1
  
#     # - name: Generate test secret key
#     #   shell: sh
#     #   run: |
#     #     mv src/secret.key.sample src/secret.key
#     #   working-directory: actix-middleware-example

#     - name: "Use Rust stable"
#       uses: actions-rs/toolchain@v1
#       with:
#           toolchain: stable
#           profile: minimal
  
#     - name: "Check rust_cache"
#       uses: Swatinem/rust-cache@v1 
  
#     - name: "Print Rust Version"
#       run: |
#         rustc -Vv
#         cargo -Vv
    
#     - name: "Build"
#       run: |
#         cargo check --all
#         cargo test --all --no-fail-fast

  
    
#   check_formatting:
#     name: "Check Formatting"
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, windows-latest, macOS-latest]
  
#     steps:
#     - name: "Checkout Repository"
#       uses: actions/checkout@v1

#     - name: "Use the latest Rust stable with rustfmt"
#       uses: actions-rs/toolchain@v1
#       with:
#           toolchain: stable
#           profile: minimal
#           components: rustfmt
#           override: true
#     - run: cargo fmt --all -- --check

#   check_clippy:
#     name: "Check Clippy"
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, windows-latest, macOS-latest]

#     steps:
#     - name: "Checkout Repository"
#       uses: actions/checkout@v1

#     # - name: Generate test secret key
#     #   shell: sh
#     #   run: |
#     #     mv src/secret.key.sample src/secret.key
#     #   working-directory: actix-middleware-example

#     - name: "Use the latest Rust stable with clippy"
#       uses: actions-rs/toolchain@v1
#       with:
#           toolchain: stable
#           profile: minimal
#           components: clippy
#           override: true
#     - run: cargo clippy -- -D warnings
  
